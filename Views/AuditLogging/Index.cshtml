@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model IEnumerable<AuditLogViewModel>

@{
    ViewData["Title"] = "Audit Log";
}

@section Styles
{
    <link href="~/assets/plugins/datatables/datatables.bundle.css" rel="stylesheet" />
}

<div class="card shadow-sm">
    <div class="card-header align-items-center py-5 gap-2 gap-md-5">
        <div class="card-title">
            <div class="d-flex align-items-center position-relative my-1">
                <span class="svg-icon svg-icon-1 position-absolute ms-4">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="currentColor"></rect>
                        <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="currentColor"></path>
                    </svg>
                </span>
                <input type="text" data-kt-filter="search" class="form-control form-control-solid w-250px ps-14" placeholder="Search..." />
            </div>
            <div id="kt_datatable_example_1_export" class="d-none"></div>
        </div>
        <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
            <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                <span class="svg-icon svg-icon-2">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect opacity="0.3" width="12" height="2" rx="1" transform="matrix(0 -1 -1 0 12.75 19.75)" fill="currentColor"></rect>
                        <path d="M12.0573 17.8813L13.5203 16.1256C13.9121 15.6554 14.6232 15.6232 15.056 16.056C15.4457 16.4457 15.4641 17.0716 15.0979 17.4836L12.4974 20.4092C12.0996 20.8567 11.4004 20.8567 11.0026 20.4092L8.40206 17.4836C8.0359 17.0716 8.0543 16.4457 8.44401 16.056C8.87683 15.6232 9.58785 15.6554 9.9797 16.1256L11.4427 17.8813C11.6026 18.0732 11.8974 18.0732 12.0573 17.8813Z" fill="currentColor"></path>
                        <path opacity="0.3" d="M18.75 15.75H17.75C17.1977 15.75 16.75 15.3023 16.75 14.75C16.75 14.1977 17.1977 13.75 17.75 13.75C18.3023 13.75 18.75 13.3023 18.75 12.75V5.75C18.75 5.19771 18.3023 4.75 17.75 4.75L5.75 4.75C5.19772 4.75 4.75 5.19771 4.75 5.75V12.75C4.75 13.3023 5.19771 13.75 5.75 13.75C6.30229 13.75 6.75 14.1977 6.75 14.75C6.75 15.3023 6.30229 15.75 5.75 15.75H4.75C3.64543 15.75 2.75 14.8546 2.75 13.75V4.75C2.75 3.64543 3.64543 2.75 4.75 2.75L18.75 2.75C19.8546 2.75 20.75 3.64543 20.75 4.75V13.75C20.75 14.8546 19.8546 15.75 18.75 15.75Z" fill="currentColor"></path>
                    </svg>
                </span>
                Export
            </button>
            <div id="kt_datatable_example_export_menu" class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-200px py-4" data-kt-menu="true">
                <div class="menu-item px-3">
                    <a href="#" class="menu-link px-3" data-kt-export="copy">
                        Copy to clipboard
                    </a>
                </div>
                <div class="menu-item px-3">
                    <a href="#" class="menu-link px-3" data-kt-export="excel">
                        Export as Excel
                    </a>
                </div>
                <div class="menu-item px-3">
                    <a href="#" class="menu-link px-3" data-kt-export="csv">
                        Export as CSV
                    </a>
                </div>
                <div class="menu-item px-3">
                    <a href="#" class="menu-link px-3" data-kt-export="pdf">
                        Export as PDF
                    </a>
                </div>
            </div>
            <div id="kt_datatable_example_buttons" class="d-none"></div>
        </div>
    </div>
    <div class="card-body pt-0">
        @if (!Model.Any())
        {
            <div class="alert alert-dismissible bg-light-warning border border-warning border-dashed d-flex flex-column flex-sm-row w-100 p-5 mb-10">
                <!--begin::Icon-->
                <!--begin::Svg Icon | path: icons/duotune/communication/com003.svg-->
                <span class="svg-icon svg-icon-2hx svg-icon-warning me-4 mb-5 mb-sm-0">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect opacity="0.3" x="2" y="2" width="20" height="20" rx="10" fill="currentColor" />
                        <rect x="11" y="14" width="7" height="2" rx="1" transform="rotate(-90 11 14)" fill="currentColor" />
                        <rect x="11" y="17" width="2" height="2" rx="1" transform="rotate(-90 11 17)" fill="currentColor" />
                    </svg>
                </span>
                <!--end::Svg Icon-->
                <!--end::Icon-->
                <!--begin::Content-->
                <div class="d-flex flex-column pe-0 pe-sm-10 align-self-center">
                    <h5 class="mb-1">No Products found!</h5>
                </div>
                <!--end::Content-->
            </div>
        }
        else
        {
            <div class="py-5">
                <div class="table-responsive">
                    <table id="kt_datatable_example" class="table table-row-dashed table-row-gray-300 gy-7">
                        <thead>
                            <tr class="fw-bold fs-6 text-gray-800">
                                <th>Entity Name</th>
                                <th>Action</th>
                                <th>Changed By</th>
                                <th>Changed At</th>
                                <th>Old Values</th>
                                <th>New Values</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var audit in Model)
                            {
                                <tr>
                                    <td>@audit.EntityName</td>
                                    <td>@audit.Action</td>
                                    <td>@audit.ChangedBy</td>
                                    <td>@audit.ChangedAt</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(audit.OldValues))
                                        {
                                            string formattedJson = string.Empty;

                                            var parsedJson = JToken.Parse(audit.OldValues);
                                            formattedJson = parsedJson.ToString(Formatting.Indented);

                                            <button class="btn btn-primary btn-sm view-json"
                                                    data-json='@Html.Raw(JsonConvert.SerializeObject(audit.OldValues))'
                                                    type="button">
                                                View
                                            </button>
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(audit.NewValues))
                                        {
                                            string formattedJson = string.Empty;

                                            var parsedJson = JToken.Parse(audit.NewValues);
                                            formattedJson = parsedJson.ToString(Formatting.Indented);

                                            <button class="btn btn-primary btn-sm view-json"
                                                    data-json='@Html.Raw(JsonConvert.SerializeObject(audit.NewValues))'
                                                    type="button">
                                                View
                                            </button>
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
</div>

@section Plugins
{
    <script src="~/assets/plugins/datatables/datatables.bundle.js"></script>
}

@section Scripts
{

    <script>
            $(document).on('click', '.view-json', function () {
            let jsonData = $(this).data('json');

            try {
                if (typeof jsonData === "string") {
                    jsonData = JSON.parse(jsonData);
                }
                if (typeof jsonData === "string") {
                    jsonData = JSON.parse(jsonData);
                }

                jsonData = JSON.stringify(jsonData, null, 4); 
            } catch (e) {
                console.error("Invalid JSON", e);
                jsonData = "Error parsing data";
            }

            bootbox.dialog({
                title: 'Values',
                message: `<pre><code class="language-json">${jsonData}</code></pre>`,
                size: 'large',
                buttons: {
                    ok: {
                        label: "Close",
                        className: 'btn-secondary'
                    }
                }
            });

            setTimeout(() => {
                if (window.Prism) Prism.highlightAll();
            }, 100);
        });

    </script>
    <script src="~/js/products.js"></script>
}

